{
  "openapi": "3.0.0",
  "info": {
    "title": "Semiont API",
    "version": "0.1.0",
    "description": "Semantic Knowledge Platform API"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "API Server"
    }
  ],
  "components": {
    "schemas": {
      "ContentFormat": {
        "type": "string",
        "enum": [
          "text/plain",
          "text/markdown"
        ],
        "description": "Content format as MIME type"
      },
      "Motivation": {
        "type": "string",
        "enum": [
          "assessing",
          "bookmarking",
          "classifying",
          "commenting",
          "describing",
          "editing",
          "highlighting",
          "identifying",
          "linking",
          "moderating",
          "questioning",
          "replying",
          "tagging"
        ],
        "description": "W3C Web Annotation motivation vocabulary - https://www.w3.org/TR/annotation-vocab/#motivation"
      },
      "BodyType": {
        "type": "string",
        "enum": [
          "TextualBody",
          "SpecificResource"
        ],
        "description": "Annotation body type - TextualBody for textual content, SpecificResource for resource links"
      },
      "SpecificResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "SpecificResource"
          },
          "source": {
            "type": "string",
            "description": "IRI of the target resource"
          },
          "purpose": {
            "type": "string",
            "enum": [
              "linking"
            ],
            "description": "Why this body is included"
          }
        },
        "required": [
          "type",
          "source"
        ]
      },
      "TextualBody": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "TextualBody"
          },
          "value": {
            "type": "string",
            "description": "The text content (e.g., entity type name)"
          },
          "purpose": {
            "type": "string",
            "enum": [
              "tagging",
              "describing",
              "commenting"
            ],
            "description": "Why this body is included"
          },
          "format": {
            "type": "string",
            "description": "MIME type (defaults to text/plain)"
          },
          "language": {
            "type": "string",
            "description": "BCP 47 language tag"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "database": {
            "type": "string",
            "enum": [
              "connected",
              "disconnected",
              "unknown"
            ]
          },
          "environment": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "message",
          "version",
          "timestamp",
          "database",
          "environment"
        ]
      },
      "LocalAuthRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "domain": {
                "type": "string"
              },
              "isAdmin": {
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "email",
              "name",
              "image",
              "domain",
              "isAdmin"
            ]
          },
          "token": {
            "type": "string"
          },
          "isNewUser": {
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "user",
          "token",
          "isNewUser"
        ]
      },
      "GoogleAuthRequest": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          }
        },
        "required": [
          "access_token"
        ]
      },
      "TokenRefreshRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIs...",
            "description": "Refresh token obtained during login"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "MCPGenerateResponse": {
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "string"
          }
        },
        "required": [
          "refresh_token"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "domain": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "termsAcceptedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lastLogin": {
            "type": [
              "string",
              "null"
            ]
          },
          "created": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "image",
          "domain",
          "provider",
          "isAdmin",
          "isActive",
          "termsAcceptedAt",
          "lastLogin",
          "created"
        ]
      },
      "AcceptTermsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "CreateDocumentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          },
          "content": {
            "type": "string"
          },
          "format": {
            "$ref": "#/components/schemas/ContentFormat"
          },
          "entityTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "language": {
            "type": "string"
          },
          "creationMethod": {
            "type": "string"
          },
          "sourceAnnotationId": {
            "type": "string"
          },
          "sourceDocumentId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "content",
          "format",
          "entityTypes"
        ]
      },
      "CreateDocumentResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            }
          }
        },
        "required": [
          "document",
          "annotations"
        ]
      },
      "ListDocumentsResponse": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptor"
            }
          },
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          }
        },
        "required": [
          "documents",
          "total",
          "offset",
          "limit"
        ]
      },
      "GetDocumentResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            },
            "description": "All annotations for the document (highlights, references, assessments, etc.)"
          },
          "entityReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            },
            "description": "Annotations that reference this document from other documents"
          }
        },
        "required": [
          "document",
          "annotations",
          "entityReferences"
        ]
      },
      "GetEntityTypesResponse": {
        "type": "object",
        "properties": {
          "entityTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "entityTypes"
        ]
      },
      "EventStreamResponse": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "event",
          "data"
        ]
      },
      "AddEntityTypeRequest": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        },
        "required": [
          "tag"
        ]
      },
      "AddEntityTypeResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "entityTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "entityTypes"
        ]
      },
      "BulkAddEntityTypesRequest": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          }
        },
        "required": [
          "tags"
        ]
      },
      "UpdateDocumentRequest": {
        "type": "object",
        "properties": {
          "entityTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "DiscoverContextRequest": {
        "type": "object",
        "properties": {}
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "isAdmin": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GenerateDocumentRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "description": "Document ID containing the annotation"
          },
          "title": {
            "type": "string",
            "description": "Custom title for generated document"
          },
          "prompt": {
            "type": "string",
            "description": "Custom prompt for content generation"
          },
          "language": {
            "type": "string",
            "description": "Language locale (e.g., \"es\", \"fr\", \"ja\")"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "details": {}
        },
        "required": [
          "error"
        ]
      },
      "DocumentLLMContextResponse": {
        "type": "object",
        "properties": {
          "mainDocument": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "relatedDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptor"
            }
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            }
          },
          "graph": {
            "type": "object",
            "properties": {
              "nodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "label",
                    "metadata"
                  ]
                }
              },
              "edges": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "source",
                    "target",
                    "type",
                    "metadata"
                  ]
                }
              }
            },
            "required": [
              "nodes",
              "edges"
            ]
          },
          "summary": {
            "type": "string"
          },
          "suggestedReferences": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mainDocumentContent": {
            "type": "string",
            "description": "The content of the main document (included if includeContent=true)"
          },
          "relatedDocumentsContent": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of document IDs to their content (included if includeContent=true)"
          }
        },
        "required": [
          "mainDocument",
          "relatedDocuments",
          "annotations",
          "graph"
        ]
      },
      "ReferenceLLMContextResponse": {
        "type": "object",
        "properties": {
          "reference": {
            "$ref": "#/components/schemas/Annotation"
          },
          "sourceDocument": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "targetDocument": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceDescriptor"
              },
              {
                "type": "null"
              }
            ]
          },
          "sourceContext": {
            "type": "object",
            "properties": {
              "before": {
                "type": "string"
              },
              "selected": {
                "type": "string"
              },
              "after": {
                "type": "string"
              }
            },
            "required": [
              "before",
              "selected",
              "after"
            ]
          },
          "targetContext": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              }
            },
            "required": [
              "content"
            ]
          },
          "suggestedResolution": {
            "type": "object",
            "properties": {
              "documentId": {
                "type": "string"
              },
              "documentName": {
                "type": "string"
              },
              "confidence": {
                "type": "number"
              },
              "reasoning": {
                "type": "string"
              }
            },
            "required": [
              "documentId",
              "documentName",
              "confidence",
              "reasoning"
            ]
          }
        },
        "required": [
          "reference",
          "sourceDocument"
        ]
      },
      "GetReferencedByResponse": {
        "type": "object",
        "properties": {
          "referencedBy": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Reference annotation ID"
                },
                "documentName": {
                  "type": "string",
                  "description": "Name of document containing the reference"
                },
                "target": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string",
                      "description": "ID of document containing the reference"
                    },
                    "selector": {
                      "type": "object",
                      "properties": {
                        "exact": {
                          "type": "string",
                          "description": "The selected text that references this document"
                        }
                      },
                      "required": [
                        "exact"
                      ]
                    }
                  },
                  "required": [
                    "source",
                    "selector"
                  ]
                }
              },
              "required": [
                "id",
                "documentName",
                "target"
              ]
            }
          }
        },
        "required": [
          "referencedBy"
        ]
      },
      "DiscoverContextResponse": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptor"
            }
          },
          "connections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fromId": {
                  "type": "string"
                },
                "toId": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "required": [
                "fromId",
                "toId",
                "type",
                "metadata"
              ]
            }
          }
        },
        "required": [
          "documents",
          "connections"
        ]
      },
      "GetDocumentByTokenResponse": {
        "type": "object",
        "properties": {
          "sourceDocument": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "expiresAt": {
            "type": "string",
            "description": "ISO 8601 timestamp when token expires"
          }
        },
        "required": [
          "sourceDocument",
          "expiresAt"
        ]
      },
      "CloneDocumentWithTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Generated clone token"
          },
          "expiresAt": {
            "type": "string",
            "description": "ISO 8601 timestamp when token expires"
          },
          "document": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          }
        },
        "required": [
          "token",
          "expiresAt",
          "document"
        ]
      },
      "GetEventsResponse": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "event": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "payload": {}
                  },
                  "required": [
                    "id",
                    "type",
                    "timestamp",
                    "userId",
                    "documentId"
                  ]
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "sequenceNumber": {
                      "type": "number"
                    },
                    "prevEventHash": {
                      "type": "string"
                    },
                    "checksum": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "sequenceNumber"
                  ]
                }
              },
              "required": [
                "event",
                "metadata"
              ]
            }
          },
          "total": {
            "type": "number"
          },
          "documentId": {
            "type": "string"
          }
        },
        "required": [
          "events",
          "total",
          "documentId"
        ]
      },
      "AnnotationContextResponse": {
        "type": "object",
        "properties": {
          "annotation": {
            "$ref": "#/components/schemas/Annotation"
          },
          "context": {
            "type": "object",
            "properties": {
              "before": {
                "type": "string"
              },
              "selected": {
                "type": "string"
              },
              "after": {
                "type": "string"
              }
            },
            "required": [
              "selected"
            ]
          },
          "document": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          }
        },
        "required": [
          "annotation",
          "context",
          "document"
        ]
      },
      "ContextualSummaryResponse": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "relevantFields": {
            "type": "object",
            "additionalProperties": {}
          },
          "context": {
            "type": "object",
            "properties": {
              "before": {
                "type": "string"
              },
              "selected": {
                "type": "string"
              },
              "after": {
                "type": "string"
              }
            },
            "required": [
              "selected"
            ]
          }
        },
        "required": [
          "summary",
          "relevantFields",
          "context"
        ]
      },
      "CreateAnnotationResponse": {
        "type": "object",
        "properties": {
          "annotation": {
            "$ref": "#/components/schemas/Annotation"
          }
        },
        "required": [
          "annotation"
        ]
      },
      "ListAnnotationsResponse": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            }
          },
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          }
        },
        "required": [
          "annotations",
          "total",
          "offset",
          "limit"
        ]
      },
      "ResolveAnnotationResponse": {
        "type": "object",
        "properties": {
          "annotation": {
            "$ref": "#/components/schemas/Annotation"
          },
          "targetDocument": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceDescriptor"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "annotation"
        ]
      },
      "GetAnnotationResponse": {
        "type": "object",
        "properties": {
          "annotation": {
            "$ref": "#/components/schemas/Annotation"
          },
          "document": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceDescriptor"
              },
              {
                "type": "null"
              }
            ]
          },
          "resolvedDocument": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceDescriptor"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "annotation",
          "document",
          "resolvedDocument"
        ]
      },
      "CreateDocumentFromTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Clone token"
          },
          "name": {
            "type": "string",
            "description": "Name for the new document"
          },
          "content": {
            "type": "string",
            "description": "Content for the new document"
          },
          "archiveOriginal": {
            "type": "boolean",
            "description": "Whether to archive the original document"
          }
        },
        "required": [
          "token",
          "name",
          "content"
        ]
      },
      "CreateAnnotationRequest": {
        "type": "object",
        "properties": {
          "motivation": {
            "$ref": "#/components/schemas/Motivation"
          },
          "target": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "selector": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/TextPositionSelector"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "TextQuoteSelector"
                        ]
                      },
                      "exact": {
                        "type": "string"
                      },
                      "prefix": {
                        "type": "string"
                      },
                      "suffix": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "exact"
                    ]
                  },
                  {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/TextPositionSelector"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TextQuoteSelector"
                              ]
                            },
                            "exact": {
                              "type": "string"
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "suffix": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "exact"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "required": [
              "source",
              "selector"
            ]
          },
          "body": {
            "oneOf": [
              {
                "type": "array",
                "maxItems": 0,
                "description": "Empty array (Phase 1 stub pattern - will be migrated to contain entity tag bodies in Phase 2)"
              },
              {
                "$ref": "#/components/schemas/AnnotationBody",
                "description": "Single body (TextualBody or SpecificResource)"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnnotationBody"
                },
                "minItems": 1,
                "description": "Array of mixed TextualBody (tagging) and SpecificResource (linking) bodies"
              }
            ]
          }
        },
        "required": [
          "target",
          "body",
          "motivation"
        ]
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "features": {
            "type": "object",
            "properties": {
              "semanticContent": {
                "type": "string"
              },
              "collaboration": {
                "type": "string"
              },
              "rbac": {
                "type": "string"
              }
            },
            "required": [
              "semanticContent",
              "collaboration",
              "rbac"
            ]
          },
          "message": {
            "type": "string"
          },
          "authenticatedAs": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "version",
          "features",
          "message"
        ]
      },
      "AdminUsersListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "image": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "domain": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "isAdmin": {
                  "type": "boolean"
                },
                "isActive": {
                  "type": "boolean"
                },
                "lastLogin": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "created": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "email",
                "name",
                "image",
                "domain",
                "provider",
                "isAdmin",
                "isActive",
                "lastLogin",
                "created",
                "updatedAt"
              ]
            }
          }
        },
        "required": [
          "success",
          "users"
        ]
      },
      "AdminUserStatsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "stats": {
            "type": "object",
            "properties": {
              "totalUsers": {
                "type": "number"
              },
              "activeUsers": {
                "type": "number"
              },
              "adminUsers": {
                "type": "number"
              },
              "regularUsers": {
                "type": "number"
              },
              "domainBreakdown": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "domain": {
                      "type": "string"
                    },
                    "count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "domain",
                    "count"
                  ]
                }
              },
              "recentSignups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "created": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "name",
                    "created"
                  ]
                }
              }
            },
            "required": [
              "totalUsers",
              "activeUsers",
              "adminUsers",
              "regularUsers",
              "domainBreakdown",
              "recentSignups"
            ]
          }
        },
        "required": [
          "success",
          "stats"
        ]
      },
      "AdminUpdateUserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "domain": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "isAdmin": {
                "type": "boolean"
              },
              "isActive": {
                "type": "boolean"
              },
              "lastLogin": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "created": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "email",
              "name",
              "image",
              "domain",
              "provider",
              "isAdmin",
              "isActive",
              "lastLogin",
              "created",
              "updatedAt"
            ]
          }
        },
        "required": [
          "success",
          "user"
        ]
      },
      "OAuthConfigResponse": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "isConfigured": {
                  "type": "boolean"
                },
                "clientId": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "isConfigured",
                "clientId"
              ]
            }
          },
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "providers",
          "allowedDomains"
        ]
      },
      "AsyncJobResponse": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "complete",
              "failed",
              "cancelled"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "detection",
              "generation"
            ]
          },
          "created": {
            "type": "string"
          }
        },
        "required": [
          "jobId",
          "status",
          "type",
          "created"
        ]
      },
      "CreateDocumentFromAnnotationResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "annotation": {
            "$ref": "#/components/schemas/Annotation"
          }
        },
        "required": [
          "document",
          "annotation"
        ]
      },
      "GetAnnotationHistoryResponse": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "documentId": {
                  "type": "string"
                },
                "payload": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "format": {
                          "$ref": "#/components/schemas/ContentFormat"
                        },
                        "contentChecksum": {
                          "type": "string"
                        },
                        "creationMethod": {
                          "type": "string",
                          "enum": [
                            "api",
                            "upload",
                            "ui",
                            "reference",
                            "clone",
                            "generated"
                          ]
                        },
                        "entityTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": {}
                        }
                      },
                      "required": [
                        "name",
                        "format",
                        "contentChecksum",
                        "creationMethod"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "format": {
                          "$ref": "#/components/schemas/ContentFormat"
                        },
                        "contentChecksum": {
                          "type": "string"
                        },
                        "parentDocumentId": {
                          "type": "string"
                        },
                        "creationMethod": {
                          "type": "string",
                          "enum": [
                            "api",
                            "upload",
                            "ui",
                            "reference",
                            "clone",
                            "generated"
                          ]
                        },
                        "entityTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": {}
                        }
                      },
                      "required": [
                        "name",
                        "format",
                        "contentChecksum",
                        "parentDocumentId",
                        "creationMethod"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "reason": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {}
                    },
                    {
                      "type": "object",
                      "properties": {
                        "annotation": {
                          "$ref": "#/components/schemas/Annotation",
                          "description": "W3C Annotation (creator/created fields are optional in events - they're derived from event userId/timestamp)"
                        }
                      },
                      "required": [
                        "annotation"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "annotationId": {
                          "type": "string",
                          "description": "Unified annotation ID"
                        }
                      },
                      "required": [
                        "annotationId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "annotationId": {
                          "type": "string",
                          "description": "Unified annotation ID"
                        },
                        "targetDocumentId": {
                          "type": "string",
                          "description": "For linking motivation"
                        }
                      },
                      "required": [
                        "annotationId",
                        "targetDocumentId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "entityType": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "entityType"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "entityType": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "entityType"
                      ]
                    }
                  ]
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "sequenceNumber": {
                      "type": "number"
                    },
                    "prevEventHash": {
                      "type": "string"
                    },
                    "checksum": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "sequenceNumber"
                  ]
                }
              },
              "required": [
                "id",
                "type",
                "timestamp",
                "userId",
                "documentId",
                "payload",
                "metadata"
              ]
            }
          },
          "total": {
            "type": "number"
          },
          "annotationId": {
            "type": "string"
          },
          "documentId": {
            "type": "string"
          }
        },
        "required": [
          "events",
          "total",
          "annotationId",
          "documentId"
        ]
      },
      "JobStatusResponse": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "detection",
              "generation"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "complete",
              "failed",
              "cancelled"
            ]
          },
          "userId": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "startedAt": {
            "type": "string"
          },
          "completedAt": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "progress": {},
          "result": {}
        },
        "required": [
          "jobId",
          "type",
          "status",
          "userId",
          "created"
        ]
      },
      "GenerateDocumentFromAnnotationRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "description": "ID of the document containing the annotation"
          },
          "name": {
            "type": "string"
          },
          "entityTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "prompt": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "GenerateDocumentStreamRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "Custom title for generated document"
          },
          "prompt": {
            "type": "string",
            "description": "Custom prompt for content generation"
          },
          "language": {
            "type": "string",
            "description": "Language locale for generated content (e.g., \"es\", \"fr\", \"ja\")"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "ResolveAnnotationRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "description": "Target document ID to resolve reference to"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "BodyOperationAdd": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "const": "add"
          },
          "item": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TextualBody"
              },
              {
                "$ref": "#/components/schemas/SpecificResource"
              }
            ]
          }
        },
        "required": [
          "op",
          "item"
        ]
      },
      "BodyOperationRemove": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "const": "remove"
          },
          "item": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TextualBody"
              },
              {
                "$ref": "#/components/schemas/SpecificResource"
              }
            ]
          }
        },
        "required": [
          "op",
          "item"
        ]
      },
      "BodyOperationReplace": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "const": "replace"
          },
          "oldItem": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TextualBody"
              },
              {
                "$ref": "#/components/schemas/SpecificResource"
              }
            ]
          },
          "newItem": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TextualBody"
              },
              {
                "$ref": "#/components/schemas/SpecificResource"
              }
            ]
          }
        },
        "required": [
          "op",
          "oldItem",
          "newItem"
        ]
      },
      "UpdateAnnotationBodyRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "description": "Document ID containing the annotation (required for O(1) Layer 3 lookup)"
          },
          "operations": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BodyOperationAdd"
                },
                {
                  "$ref": "#/components/schemas/BodyOperationRemove"
                },
                {
                  "$ref": "#/components/schemas/BodyOperationReplace"
                }
              ]
            },
            "minItems": 1,
            "description": "Array of body modification operations to apply"
          }
        },
        "required": [
          "documentId",
          "operations"
        ]
      },
      "UpdateAnnotationBodyResponse": {
        "type": "object",
        "properties": {
          "annotation": {
            "$ref": "#/components/schemas/Annotation"
          }
        },
        "required": [
          "annotation"
        ]
      },
      "DeleteAnnotationRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "format": "uri",
            "description": "Document URI containing the annotation (required for O(1) Layer 3 lookup)"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "TextPositionSelector": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TextPositionSelector"
            ]
          },
          "start": {
            "type": "number",
            "description": "Character offset from document start"
          },
          "end": {
            "type": "number",
            "description": "Character offset from document start"
          }
        },
        "required": [
          "type",
          "start",
          "end"
        ]
      },
      "TextQuoteSelector": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TextQuoteSelector"
            ]
          },
          "exact": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "exact"
        ]
      },
      "Agent": {
        "type": "object",
        "description": "Minimal Person/Organization for attribution (W3C PROV compatible)",
        "additionalProperties": true,
        "properties": {
          "@id": {
            "type": "string",
            "format": "uri",
            "description": "Unique identifier for the agent"
          },
          "@type": {
            "description": "Type(s) of agent (Person, Organization, Software)",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "email_sha1": {
            "type": "string"
          },
          "homepage": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ResourceDescriptor": {
        "type": "object",
        "description": "Metadata about a resource (1:1 with its URI). JSON-LD subject is @id. Link to concrete bytes via representations.",
        "required": [
          "@context",
          "@id",
          "name",
          "representations"
        ],
        "additionalProperties": true,
        "properties": {
          "@context": {
            "description": "JSON-LD context; URI, object, or array of these.",
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "object",
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uri"
                    },
                    {
                      "type": "object",
                      "additionalProperties": true
                    }
                  ]
                }
              }
            ]
          },
          "@id": {
            "type": "string",
            "format": "uri",
            "description": "Canonical URI/URN of the resource being described."
          },
          "@type": {
            "description": "Type(s) of the resource (IRIs/CURIEs via @context).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "identifier": {
            "description": "Persistent identifiers (e.g., DOI, URN).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              },
              {
                "type": "object",
                "properties": {
                  "@id": {
                    "type": "string",
                    "format": "uri"
                  },
                  "value": {
                    "type": "string"
                  },
                  "scheme": {
                    "type": "string"
                  }
                },
                "additionalProperties": true
              }
            ]
          },
          "about": {
            "description": "Topics (IRIs or strings).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              }
            ]
          },
          "sameAs": {
            "description": "Equivalent/authoritative references.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "isPartOf": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "hasPart": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "license": {
            "type": "string",
            "format": "uri"
          },
          "version": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          },
          "wasDerivedFrom": {
            "description": "W3C PROV - source resources this was derived from",
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              }
            ]
          },
          "wasAttributedTo": {
            "description": "W3C PROV - agents responsible for this resource",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Agent"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            ]
          },
          "conformsTo": {
            "description": "Profile/shape URI this resource description conforms to.",
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              }
            ]
          },
          "availableFormats": {
            "description": "Convenience set summarizing media types across representations.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "representations": {
            "description": "Managed or referenced byte-level renditions of this resource.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Representation"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Representation"
                }
              }
            ]
          },
          "archived": {
            "type": "boolean",
            "description": "Application-specific: Whether this resource is archived"
          },
          "entityTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Application-specific: Entity types for this resource"
          },
          "isDraft": {
            "type": "boolean",
            "description": "Application-specific: Whether this resource is a draft"
          },
          "creationMethod": {
            "type": "string",
            "enum": [
              "api",
              "upload",
              "ui",
              "reference",
              "clone",
              "generated"
            ],
            "description": "Application-specific: How this resource was created"
          },
          "sourceAnnotationId": {
            "type": "string",
            "description": "Application-specific: ID of annotation that triggered generation"
          },
          "sourceDocumentId": {
            "type": "string",
            "description": "Application-specific: ID of source document for clones/derivatives"
          }
        }
      },
      "Representation": {
        "type": "object",
        "description": "A specific, byte-addressable rendition of a resource (file/asset/variant).",
        "required": [
          "mediaType"
        ],
        "additionalProperties": true,
        "properties": {
          "@id": {
            "type": "string",
            "format": "uri",
            "description": "Stable ID for this representation."
          },
          "@type": {
            "description": "Type(s), e.g., schema:MediaObject.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              }
            ]
          },
          "mediaType": {
            "type": "string",
            "description": "MIME/media type (e.g., text/markdown, image/png)."
          },
          "storageUri": {
            "type": "string",
            "description": "Where the bytes live (s3://, file://, https://, ipfs://, etc.)."
          },
          "filename": {
            "type": "string"
          },
          "byteSize": {
            "description": "Size of the payload in bytes.",
            "oneOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "string"
              }
            ]
          },
          "checksum": {
            "description": "Integrity hash (e.g., sha256:abcd…).",
            "type": "string"
          },
          "encoding": {
            "type": "string",
            "description": "Compression/transfer encoding if applicable."
          },
          "language": {
            "type": "string",
            "description": "IETF BCP 47 language tag (e.g., en, es-ES)."
          },
          "width": {
            "type": "integer",
            "minimum": 0,
            "description": "Pixels (images/video)."
          },
          "height": {
            "type": "integer",
            "minimum": 0,
            "description": "Pixels (images/video)."
          },
          "duration": {
            "type": "number",
            "minimum": 0,
            "description": "Seconds (audio/video)."
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "conformsTo": {
            "description": "Profile/shape the bytes conform to (e.g., a JSON profile or SVG profile).",
            "oneOf": [
              {
                "type": "string",
                "format": "uri"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              }
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rel": {
            "description": "Semantics of this rendition relative to the resource (e.g., original, thumbnail, preview, derived).",
            "type": "string",
            "enum": [
              "original",
              "thumbnail",
              "preview",
              "optimized",
              "derived",
              "other"
            ]
          }
        }
      },
      "Annotation": {
        "type": "object",
        "properties": {
          "@context": {
            "type": "string",
            "const": "http://www.w3.org/ns/anno.jsonld",
            "default": "http://www.w3.org/ns/anno.jsonld",
            "description": "W3C Web Annotation JSON-LD context"
          },
          "type": {
            "type": "string",
            "const": "Annotation",
            "default": "Annotation",
            "description": "W3C Annotation type"
          },
          "id": {
            "type": "string"
          },
          "motivation": {
            "$ref": "#/components/schemas/Motivation"
          },
          "target": {
            "oneOf": [
              {
                "type": "string",
                "description": "IRI of the entire resource being annotated"
              },
              {
                "$ref": "#/components/schemas/AnnotationTarget"
              }
            ],
            "description": "W3C Web Annotation target - can be a simple IRI string (entire resource) or an object with source and optional selector (fragment)"
          },
          "body": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnnotationBody"
                },
                "maxItems": 0,
                "description": "Empty array for stub references (Phase 1 pattern)"
              },
              {
                "$ref": "#/components/schemas/AnnotationBody",
                "description": "Single body (TextualBody or SpecificResource)"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnnotationBody"
                },
                "description": "Array of mixed TextualBody (tagging) and SpecificResource (linking) bodies"
              }
            ],
            "description": "W3C Web Annotation body - can be empty array, single body, or array of bodies"
          },
          "creator": {
            "$ref": "#/components/schemas/Agent"
          },
          "created": {
            "type": "string"
          },
          "modified": {
            "type": "string"
          },
          "generator": {
            "$ref": "#/components/schemas/Agent"
          }
        },
        "required": [
          "@context",
          "type",
          "id",
          "motivation",
          "target",
          "body"
        ]
      },
      "AnnotationBody": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TextualBody"
          },
          {
            "$ref": "#/components/schemas/SpecificResource"
          }
        ],
        "description": "Phase 2: Body can be TextualBody (for entity tags, descriptions) or SpecificResource (for links)"
      },
      "AnnotationTarget": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "IRI of the resource being annotated"
          },
          "selector": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextPositionSelector"
              },
              {
                "$ref": "#/components/schemas/TextQuoteSelector"
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/TextPositionSelector"
                    },
                    {
                      "$ref": "#/components/schemas/TextQuoteSelector"
                    }
                  ]
                }
              }
            ],
            "description": "Optional selector to identify a specific segment of the source resource"
          }
        },
        "required": [
          "source"
        ],
        "description": "W3C Web Annotation target object - source is required, selector is optional"
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "image": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "domain": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "isAdmin": {
                "type": "boolean"
              },
              "isActive": {
                "type": "boolean"
              },
              "lastLogin": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "created": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "email",
              "domain",
              "provider",
              "isAdmin",
              "isActive",
              "created",
              "updatedAt"
            ]
          }
        },
        "required": [
          "success",
          "user"
        ]
      },
      "DeleteUserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "TokenRefreshResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          }
        },
        "required": [
          "access_token"
        ]
      },
      "CreateDocumentFromSelectionRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "description": "ID of the document containing the annotation"
          },
          "content": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "format": {
            "$ref": "#/components/schemas/ContentFormat"
          },
          "entityTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true
          },
          "prompt": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        },
        "required": [
          "documentId",
          "content",
          "name",
          "format"
        ]
      },
      "CreateDocumentFromSelectionResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "annotation": {
            "$ref": "#/components/schemas/Annotation"
          }
        },
        "required": [
          "document",
          "annotation"
        ]
      },
      "GenerateDocumentFromAnnotationResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "annotation": {
            "$ref": "#/components/schemas/Annotation"
          },
          "generated": {
            "type": "boolean"
          }
        },
        "required": [
          "document",
          "annotation",
          "generated"
        ]
      },
      "CreateFromAnnotationRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "description": "ID of the document containing the annotation"
          },
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "format": {
            "$ref": "#/components/schemas/ContentFormat"
          }
        },
        "required": [
          "documentId",
          "name",
          "content",
          "format"
        ]
      },
      "CreateFromAnnotationResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            }
          }
        },
        "required": [
          "document",
          "annotations"
        ]
      },
      "DetectAnnotationsStreamRequest": {
        "type": "object",
        "properties": {
          "entityTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "entityTypes"
        ]
      },
      "DetectEntitiesRequest": {
        "type": "object",
        "properties": {
          "entityTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "entityTypes"
        ]
      },
      "CreateJobResponse": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "detection",
              "generation"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "complete",
              "failed",
              "cancelled"
            ]
          },
          "created": {
            "type": "string"
          },
          "documentId": {
            "type": "string"
          }
        },
        "required": [
          "jobId",
          "type",
          "status",
          "created"
        ]
      },
      "GetAnnotationsResponse": {
        "type": "object",
        "properties": {
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            }
          },
          "total": {
            "type": "number",
            "description": "Total number of annotations"
          },
          "motivation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Motivation"
              },
              {
                "type": "null"
              }
            ],
            "description": "Motivation filter applied (if any)"
          }
        },
        "required": [
          "annotations",
          "total"
        ]
      },
      "CreateDocumentFromTokenResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/ResourceDescriptor"
          },
          "annotations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annotation"
            }
          }
        },
        "required": [
          "document",
          "annotations"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/documents/{id}": {
      "get": {
        "summary": "Get Document by URI (W3C Content Negotiation)",
        "description": "W3C-compliant globally resolvable document URI with content negotiation. Returns JSON-LD for API clients (Accept: application/ld+json or application/json). Redirects to frontend for browsers (Accept: text/html or browser User-Agent). Requires authentication.",
        "tags": [
          "W3C URIs"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Document representation (JSON-LD)",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect to frontend (for browsers)"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/annotations/{id}": {
      "get": {
        "summary": "Get Annotation by URI (W3C Content Negotiation)",
        "description": "W3C-compliant globally resolvable annotation URI with content negotiation. Returns JSON-LD for API clients (Accept: application/ld+json or application/json). Redirects to frontend for browsers (Accept: text/html or browser User-Agent). Requires authentication and documentId query parameter.",
        "tags": [
          "W3C URIs"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Annotation ID"
          },
          {
            "name": "documentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "description": "Document ID or URI containing the annotation"
          }
        ],
        "responses": {
          "200": {
            "description": "Annotation representation (JSON-LD)",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnnotationResponse"
                }
              }
            }
          },
          "302": {
            "description": "Redirect to frontend (for browsers)"
          },
          "400": {
            "description": "Missing documentId parameter"
          },
          "404": {
            "description": "Annotation not found"
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "summary": "Health Check",
        "description": "Check if the API is operational and database is connected",
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "Health status of the API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/local": {
      "post": {
        "summary": "Local Development Authentication",
        "description": "Authenticate with email only (development mode only)",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Local auth not enabled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/google": {
      "post": {
        "summary": "Google OAuth Authentication",
        "description": "Authenticate with Google OAuth access token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/refresh": {
      "post": {
        "summary": "Refresh Access Token",
        "description": "Exchange a refresh token for a new access token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleAuthRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/mcp-generate": {
      "post": {
        "summary": "Generate MCP Token",
        "description": "Generate a short-lived token for MCP server",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "MCP token generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPGenerateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Get Current User",
        "description": "Get information about the authenticated user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/accept-terms": {
      "post": {
        "summary": "Accept Terms",
        "description": "Mark terms as accepted for the current user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Terms accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptTermsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "summary": "Logout",
        "description": "Logout the current user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptTermsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/status": {
      "get": {
        "summary": "Get Service Status",
        "description": "Get service status and feature availability",
        "tags": [
          "General"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Service status information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "summary": "List All Users",
        "description": "Get a list of all users (admin only)",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/stats": {
      "get": {
        "summary": "User Statistics",
        "description": "Get user statistics (admin only)",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserStatsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}": {
      "patch": {
        "summary": "Update User",
        "description": "Update user properties (admin only)",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "user-123"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Delete a user account (admin only, cannot delete own account)",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "user-123"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptTermsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete own account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/oauth/config": {
      "get": {
        "summary": "Get OAuth Configuration",
        "description": "Get OAuth provider configuration (admin only, read-only)",
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OAuth configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthConfigResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents": {
      "post": {
        "summary": "Create Document",
        "description": "Create a new document",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Documents",
        "description": "List all documents with optional filters",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": [
                "number",
                "null"
              ],
              "default": 0
            },
            "required": false,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": [
                "number",
                "null"
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "entityType",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "true"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "false"
                  ]
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "required": false,
            "name": "archived",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Documents listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/search": {
      "get": {
        "summary": "Search Documents",
        "description": "Search documents by name",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "name": "q",
            "in": "query"
          },
          {
            "schema": {
              "type": [
                "number",
                "null"
              ],
              "default": 10
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDocumentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}": {
      "patch": {
        "summary": "Update Document",
        "description": "Update document metadata (append-only operations - name and content are immutable)",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}/content": {
      "get": {
        "summary": "Get Document Content",
        "description": "Get raw content of a document with correct MIME type from document metadata",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Document content with MIME type from document.format",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "text/markdown": {
                "schema": {
                  "type": "string"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/from-annotation/{annotationId}": {
      "post": {
        "summary": "Create Document from Annotation",
        "description": "Create a new document from an annotation/reference",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "annotationId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateDocumentFromAnnotationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document created from annotation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}/detect-annotations-stream": {
      "post": {
        "summary": "Detect Annotations with Progress (SSE)",
        "description": "Stream real-time entity detection progress via Server-Sent Events",
        "tags": [
          "Documents",
          "Annotations",
          "Real-time"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetEntityTypesResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SSE stream opened successfully",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/EventStreamResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/api/documents/{id}/detect-entities": {
      "post": {
        "summary": "Detect Entities (Job)",
        "description": "Create an async entity detection job. Use GET /api/jobs/{jobId} to poll status. For real-time updates, use POST /api/documents/{id}/detect-annotations-stream instead.",
        "tags": [
          "Documents",
          "Annotations",
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetEntityTypesResponse"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/api/documents/{id}/llm-context": {
      "get": {
        "summary": "Get Document LLM Context",
        "description": "Get document with full context for LLM processing",
        "tags": [
          "Documents",
          "AI"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 3,
              "default": 2
            },
            "required": false,
            "name": "depth",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 20,
              "default": 10
            },
            "required": false,
            "name": "maxDocuments",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "true"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "false"
                  ]
                },
                {
                  "type": "boolean"
                }
              ],
              "default": true
            },
            "required": false,
            "name": "includeContent",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "true"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "false"
                  ]
                },
                {
                  "type": "boolean"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "includeSummary",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "LLM context",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentLLMContextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{documentId}/references/{referenceId}/llm-context": {
      "get": {
        "summary": "Get Reference LLM Context",
        "description": "Get reference with full context for LLM processing",
        "tags": [
          "Documents",
          "AI"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "documentId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "referenceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "true"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "false"
                  ]
                },
                {
                  "type": "boolean"
                }
              ],
              "default": true
            },
            "required": false,
            "name": "includeSourceContext",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "true"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "false"
                  ]
                },
                {
                  "type": "boolean"
                }
              ],
              "default": true
            },
            "required": false,
            "name": "includeTargetContext",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 100,
              "maximum": 5000,
              "default": 1000
            },
            "required": false,
            "name": "contextWindow",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Reference LLM context",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceLLMContextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}/referenced-by": {
      "get": {
        "summary": "Get Referenced By",
        "description": "Get documents that reference this document",
        "tags": [
          "Documents",
          "Graph"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Documents that reference this document",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReferencedByResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}/discover-context": {
      "post": {
        "summary": "Discover Context",
        "description": "Discover related documents and concepts",
        "tags": [
          "Documents",
          "Graph"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoverContextRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Context discovery results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoverContextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/token/{token}": {
      "get": {
        "summary": "Get Document by Clone Token",
        "description": "Retrieve a document using a clone token",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "token",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Document retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentByTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/create-from-token": {
      "post": {
        "summary": "Create Document from Clone Token",
        "description": "Create a new document using a clone token",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentFromTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}/clone-with-token": {
      "post": {
        "summary": "Clone Document with Token",
        "description": "Generate a temporary token for cloning a document",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Clone token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloneDocumentWithTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}/annotations": {
      "get": {
        "summary": "Get Document Annotations",
        "description": "Get all annotations (both highlights and references) in a document",
        "tags": [
          "Documents",
          "Annotations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Document annotations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}/events": {
      "get": {
        "summary": "Get Document Event History",
        "description": "Get full event history for a document with optional filtering",
        "tags": [
          "Documents",
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "document.created",
                "document.cloned",
                "document.archived",
                "document.unarchived",
                "annotation.added",
                "annotation.removed",
                "annotation.body.updated",
                "entitytag.added",
                "entitytag.removed",
                "entitytype.added"
              ]
            },
            "required": false,
            "name": "type",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "userId",
            "in": "query"
          },
          {
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Events retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}/events/stream": {
      "get": {
        "summary": "Subscribe to Document Events (SSE)",
        "description": "Open a Server-Sent Events stream to receive real-time document events",
        "tags": [
          "Documents",
          "Events",
          "Real-time"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "SSE stream opened successfully",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/EventStreamResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/annotations/{id}/create-document": {
      "post": {
        "summary": "Create Document from Annotation",
        "description": "Create a new document from an annotation and resolve the annotation to it",
        "tags": [
          "Selections"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document created and annotation resolved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentFromAnnotationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/annotations/{id}/generate-document": {
      "post": {
        "summary": "Generate Document (Job)",
        "description": "Create an async document generation job from an annotation. Use GET /api/jobs/{jobId} to poll status. For real-time updates, use POST /api/annotations/{id}/generate-document-stream instead.",
        "tags": [
          "Selections",
          "Documents",
          "Jobs",
          "AI"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Annotation ID"
            },
            "required": true,
            "description": "Annotation ID",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncJobResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Annotation not found"
          }
        }
      }
    },
    "/api/annotations/{id}/context": {
      "get": {
        "summary": "Get Annotation Context",
        "description": "Get the context around an annotation",
        "tags": [
          "Selections"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0,
              "maximum": 5000,
              "default": 100
            },
            "required": false,
            "name": "contextBefore",
            "in": "query"
          },
          {
            "schema": {
              "type": [
                "integer",
                "null"
              ],
              "minimum": 0,
              "maximum": 5000,
              "default": 100
            },
            "required": false,
            "name": "contextAfter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Annotation context",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationContextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/annotations/{id}/summary": {
      "get": {
        "summary": "Get Contextual Summary",
        "description": "Get an AI-generated summary of the annotation in context",
        "tags": [
          "Selections"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Contextual summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextualSummaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/annotations/{id}/generate-document-stream": {
      "post": {
        "summary": "Generate Document from Reference (SSE)",
        "description": "Stream real-time document generation progress via Server-Sent Events",
        "tags": [
          "Selections",
          "Documents",
          "Real-time",
          "AI"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Reference/annotation ID"
            },
            "required": true,
            "description": "Reference/annotation ID",
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SSE stream opened successfully",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/EventStreamResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "404": {
            "description": "Reference not found"
          }
        }
      }
    },
    "/api/annotations": {
      "post": {
        "summary": "Create Annotation",
        "description": "Create a new annotation/reference in a document",
        "tags": [
          "Annotations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAnnotationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Annotation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAnnotationResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Annotations",
        "description": "List all annotations for a document (requires documentId for O(1) Layer 3 lookup)",
        "tags": [
          "Annotations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Document ID to list annotations for"
            },
            "required": true,
            "description": "Document ID to list annotations for",
            "name": "documentId",
            "in": "query"
          },
          {
            "schema": {
              "type": [
                "number",
                "null"
              ],
              "default": 0
            },
            "required": false,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": [
                "number",
                "null"
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Annotations listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAnnotationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/annotations/{id}/body": {
      "put": {
        "summary": "Update Annotation Body",
        "description": "Apply fine-grained operations to modify annotation body items (add, remove, or replace TextualBody and SpecificResource items)",
        "tags": [
          "Annotations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAnnotationBodyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Annotation body updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAnnotationBodyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/annotations/{id}": {
      "delete": {
        "summary": "Delete Annotation",
        "description": "Delete an annotation (requires documentId in body for O(1) Layer 3 lookup)",
        "tags": [
          "Annotations"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAnnotationRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Annotation deleted successfully"
          },
          "404": {
            "description": "Annotation not found"
          }
        }
      }
    },
    "/api/documents/{documentId}/annotations/{annotationId}/history": {
      "get": {
        "summary": "Get Annotation History",
        "description": "Get full event history for a specific annotation (highlight or reference)",
        "tags": [
          "Selections",
          "Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "documentId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "annotationId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Annotation history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAnnotationHistoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Annotation not found"
          }
        }
      }
    },
    "/api/entity-types": {
      "get": {
        "summary": "Get Entity Types",
        "description": "Get list of available entity types for references",
        "tags": [
          "Selections"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Entity types retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntityTypesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Entity Type",
        "description": "Add a new entity type to the collection (append-only, requires moderator/admin)",
        "tags": [
          "Selections"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEntityTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity type added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddEntityTypeResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Moderator or Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/entity-types/bulk": {
      "post": {
        "summary": "Bulk Add Entity Types",
        "description": "Add multiple entity types to the collection (append-only, requires moderator/admin)",
        "tags": [
          "Selections"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkAddEntityTypesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity types added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddEntityTypeResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Moderator or Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/{id}": {
      "get": {
        "summary": "Get Job Status",
        "description": "Get the current status and progress of an async job",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Job status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      }
    }
  },
  "webhooks": {}
}
