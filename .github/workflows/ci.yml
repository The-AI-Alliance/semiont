name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Run frontend tests with semiont CLI
        run: ./bin/semiont test --service frontend --no-coverage
        env:
          CI: true

  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Run backend tests with semiont CLI
        run: ./bin/semiont test --service backend --no-coverage
        env:
          CI: true
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
          JWT_SECRET: test-secret-for-ci
          GOOGLE_CLIENT_ID: test-client-id
          GOOGLE_CLIENT_SECRET: test-client-secret

  test-cloud:
    name: Cloud Package Compilation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Run CDK tests
        run: cd packages/cloud && npm test

  test-scripts:
    name: Management Scripts Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Build dependencies
        run: |
          cd packages/config-loader && npm run build || true
          cd ../cloud && npm run build || true
          
      - name: Build and test scripts
        run: |
          cd packages/scripts
          npm run build
          npx tsc --noEmit --skipLibCheck

  test-comprehensive:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Run comprehensive test suite
        run: ./bin/semiont test --no-coverage
        env:
          CI: true
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
          JWT_SECRET: test-secret-for-ci
          GOOGLE_CLIENT_ID: test-client-id
          GOOGLE_CLIENT_SECRET: test-client-secret

  validate-config:
    name: Configuration Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Validate configuration
        run: ./bin/semiont configure validate

  build-all:
    name: Build All Applications
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend, test-cloud, test-scripts]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm install

      - name: Build all applications
        run: |
          # Build api-types (dependency for other packages)
          cd packages/api-types && npm run build
          cd ../..
          
          # Build frontend
          cd apps/frontend && npm run build
          cd ../..
          
          # Build backend  
          cd apps/backend && npm run build
          cd ../..
          
          # Build scripts
          cd packages/scripts && npm run build
          cd ../..
          
          # Build config-loader
          cd packages/config-loader && npm run build
          cd ../..