name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and CLI
        run: |
          npm install
          npm run install:cli

      - name: Run frontend tests
        run: |
          echo "Running frontend unit tests..."
          cd apps/frontend
          npm test
        env:
          CI: true

  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and CLI
        run: |
          npm install
          npm run install:cli

      - name: Run backend tests
        run: |
          echo "Running backend unit tests..."
          cd apps/backend
          npm test
        env:
          CI: true
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
          JWT_SECRET: test-secret-for-ci
          GOOGLE_CLIENT_ID: test-client-id
          GOOGLE_CLIENT_SECRET: test-client-secret

  test-cloud:
    name: Cloud Package Compilation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and CLI
        run: |
          npm install
          npm run install:cli

      - name: Run CDK tests
        run: cd packages/cloud && npm test

  test-cli:
    name: CLI Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and CLI
        run: |
          npm install
          npm run install:cli

      - name: Validate CLI installation
        run: |
          semiont --version
          semiont --help
      
      - name: Run CLI unit tests
        run: |
          echo "Running CLI package unit tests..."
          cd apps/cli && npm test
        env:
          CI: true
      
      - name: Test CLI commands with dry-run
        run: |
          echo "Testing CLI commands with dry-run..."
          # First initialize a project to create environment configs
          semiont init --dry-run
          
          # Test help for various commands
          semiont --help
          semiont start --help
          semiont provision --help
          semiont check --help
          
          echo "CLI commands validated successfully"
        env:
          CI: true

  test-comprehensive:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and CLI
        run: |
          npm install
          npm run install:cli

      - name: Run comprehensive test suite
        run: |
          echo "Running comprehensive test suite..."
          # Run tests for each package
          cd apps/frontend && npm test && cd ../..
          cd apps/backend && npm test && cd ../..
          cd apps/cli && npm test && cd ../..
          
          echo "All tests completed successfully"
        env:
          CI: true
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
          JWT_SECRET: test-secret-for-ci
          GOOGLE_CLIENT_ID: test-client-id
          GOOGLE_CLIENT_SECRET: test-client-secret
          

  validate-config:
    name: Configuration Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and CLI
        run: |
          npm install
          npm run install:cli

      - name: Validate CLI installation
        run: |
          # Verify the CLI is installed and working
          semiont --version
          semiont --help

  build-all:
    name: Build All Applications
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend, test-cloud, test-cli]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and CLI
        run: |
          npm install
          npm run install:cli

      - name: Build all applications
        run: |
          # Build all workspaces
          npm run build
          # Validate CLI still works after build
          semiont --version
          echo "All applications built successfully"