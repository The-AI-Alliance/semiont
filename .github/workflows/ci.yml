name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and setup CLI
        run: npm run setup

      - name: Run frontend tests with semiont CLI
        run: |
          echo "Running frontend unit tests..."
          semiont test -e unit --service frontend --suite integration --output summary
        env:
          CI: true

  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and setup CLI
        run: npm run setup

      - name: Run backend tests with semiont CLI
        run: |
          echo "Running backend unit tests..."
          semiont test -e unit --service backend --suite integration --output summary
        env:
          CI: true
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
          JWT_SECRET: test-secret-for-ci
          GOOGLE_CLIENT_ID: test-client-id
          GOOGLE_CLIENT_SECRET: test-client-secret

  test-cloud:
    name: Cloud Package Compilation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and setup CLI
        run: npm run setup

      - name: Run CDK tests
        run: cd packages/cloud && npm test

  test-cli:
    name: CLI Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and setup CLI
        run: npm run setup

      - name: Validate CLI installation
        run: |
          semiont --version
          semiont --help
      
      - name: Run CLI unit tests
        run: |
          echo "Running CLI package unit tests..."
          cd packages/cli && npm test
        env:
          CI: true
      
      - name: Test CLI commands with structured output
        run: |
          echo "Testing CLI commands with different output formats..."
          # Test with JSON output
          semiont check -e local --service all --dry-run --output json
          # Test with table output
          semiont check -e local --service all --dry-run --output table
          # Test with YAML output
          semiont check -e local --service all --dry-run --output yaml
          # Test the test command itself
          semiont test -e local --suite health --service all --dry-run --output summary
        env:
          CI: true

  test-comprehensive:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and setup CLI
        run: npm run setup

      - name: Run comprehensive test suite
        run: |
          echo "Running comprehensive test suite..."
          semiont test -e unit --suite all --service all --output summary
          
          # Also run with JSON output for artifact storage
          echo "Generating test results in JSON format..."
          semiont test -e unit --suite all --service all --output json > test-results.json
        env:
          CI: true
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
          JWT_SECRET: test-secret-for-ci
          GOOGLE_CLIENT_ID: test-client-id
          GOOGLE_CLIENT_SECRET: test-client-secret
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.json

  validate-config:
    name: Configuration Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and setup CLI
        run: npm run setup

      - name: Validate configuration
        run: semiont configure -e unit validate

  build-all:
    name: Build All Applications
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend, test-cloud, test-cli]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies and setup CLI
        run: npm run setup

      - name: Build all applications
        run: |
          # Everything is already built by npm run setup
          # Just validate the build worked
          semiont --version
          echo "All applications built successfully during setup"